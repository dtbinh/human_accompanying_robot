% process simulation result
%% imm vs single-model
% load data
%{
clear
addpath('./sim_res');
load('h_state_1p5.mat');
sim_len = size(h_state,2); % simulation time
h_traj = h_state(1:2,:); % h_state contains [x;y;heading]
% safe_dist1 = 2; % safe_dist for imm
% safe_dist2 = 1.5; % safe_dist for extpol
% h_v = 2;

% % extrapolation
% % load('sim_traj_extpol_MPC_08-Dec-2014_1p5_2','pre_traj','r_state');
% % extpol_pre_traj-09-Dec-2014 saves the predicted trajectory using
% % extrapolation. this is a tempory way.
% load('sim_traj_extpol_greedy1_2_2_1p5_09-Dec-2014_204347','pre_traj');
% extpol_pre_traj = pre_traj(:,:,1:sim_len);
% % extpol_r_pos = r_state(1:2,1:sim_len);
% % extpol_r_v = r_state(3,1:sim_len);

% single model
load('x_pos_pre1_single_model','x_pos_pre1')
load('y_pos_pre1_single_model','y_pos_pre1')

sgm_pre_traj = zeros(2,size(x_pos_pre1,1)-1,size(x_pos_pre1,2));
sgm_pre_traj(1,:,:) = x_pos_pre1(2:end,:);
sgm_pre_traj(2,:,:) = y_pos_pre1(2:end,:);

% imm
% load('sim_traj_IMM_greedy1_2_2_1p5_09-Dec-2014_204006','pre_traj');
load('x_pos_pre_imm','x_pos_pre_imm')
load('y_pos_pre_imm','y_pos_pre_imm')

imm_pre_traj = zeros(2,size(x_pos_pre_imm,1)-1,size(x_pos_pre_imm,2));
imm_pre_traj(1,:,:) = x_pos_pre_imm(2:end,:);
imm_pre_traj(2,:,:) = y_pos_pre_imm(2:end,:);

% imm_pre_traj = pre_traj(:,:,1:sim_len); % predicted human position
% imm_r_pos = r_state(1:2,1:sim_len);
% imm_r_v = r_state(3,1:sim_len);
hor = size(imm_pre_traj,2)-1;
% hor = size(pre_traj,2)-1; % planning horizon
%}

% compare the prediction
%{
pred_err = zeros(2,sim_len-1); % prediction error. 1st row for imm and 2nd row for extpol
for ii = 1:sim_len-1
    if ii+hor <= sim_len-1
        dif_vec1 = imm_pre_traj(:,:,ii)-h_traj(:,ii:ii+hor);
        dif_vec2 = sgm_pre_traj(:,:,ii)-h_traj(:,ii:ii+hor);
        pred_err(1,ii) = sum(sqrt(sum(dif_vec1.^2,1)))/(hor+1);
        pred_err(2,ii) = sum(sqrt(sum(dif_vec2.^2,1)))/(hor+1);
%         pred_err(1,ii) = sum(sum(abs(dif_vec1),1))/(hor+1);
%         pred_err(2,ii) = sum(sum(abs(dif_vec2),1))/(hor+1);
    else
        tmp_len = sim_len-ii;
        dif_vec1 = imm_pre_traj(:,1:tmp_len,ii)-h_traj(:,ii:sim_len-1);
        dif_vec2 = sgm_pre_traj(:,1:tmp_len,ii)-h_traj(:,ii:sim_len-1);
        pred_err(1,ii) = sum(sqrt(sum(dif_vec1.^2,1)))/tmp_len;
        pred_err(2,ii) = sum(sqrt(sum(dif_vec2.^2,1)))/tmp_len;
%         pred_err(1,ii) = sum(sum(abs(dif_vec1),1))/tmp_len;
%         pred_err(2,ii) = sum(sum(abs(dif_vec2),1))/tmp_len;
    end
end
ave_pred_err = mean(pred_err,2);
max_pred_err = max(pred_err,[],2);
h1 = figure;
box on
hold on
plot((1:size(pred_err,2))*0.5,pred_err(2,:),'r--','LineWidth',2)
plot((1:size(pred_err,2))*0.5,pred_err(1,:),'b','LineWidth',2)
legend('single','imm')
grid on
title('Prediction difference')
xlabel('time [sec]')
ylabel('distance [m]')
xlim([0,160])
saveas(h1,'imm_vs_single','fig')
fig2Pdf('imm_vs_single',300,h1)
%}
%% mpc vs reactive

% compare the motion planning
% load data
%
addpath('./sim_res');
load('h_state_1p5.mat');
sim_len = size(h_state,2); % simulation time
h_traj = h_state(1:2,:); % h_state contains [x;y;heading]
safe_dist = 2; % safe_dist for imm
h_v = 1.5;

% mpc
load('sim_traj_IMM_MPC_2_2_1p5_23-Apr-2015_211212','pre_traj','r_state','est_state','plan_state');
mpc_pre_traj = pre_traj(:,:,1:sim_len); % predicted human position
mpc_r_plan_pos = plan_state(1:2,:,:);
mpc_r_pos = r_state(1:2,1:sim_len);
mpc_r_v = r_state(4,1:sim_len);
% greedy
load('sim_traj_IMM_greedy1_2_2_1p5_23-Apr-2015_225328','r_state','plan_state');
grd_pre_traj = pre_traj(:,:,1:sim_len);
grd_r_plan_pos = plan_state(1:2,:,:);
grd_r_pos = r_state(1:2,1:sim_len);
grd_r_v = r_state(4,1:sim_len);

pos_dif = zeros(4,sim_len-1);
v_dif = zeros(2,sim_len-1);
mpc_plan_pos_dif = zeros(6,sim_len-1); % difference between human estimated positon and robot planned position
grd_plan_pos_dif = zeros(6,sim_len-1); % difference between human estimated positon and robot planned position

for ii = 1:sim_len-1
    dif_vec1 = mpc_r_pos(:,ii)-h_traj(:,ii);
    dif_vec2 = grd_r_pos(:,ii)-h_traj(:,ii);
    pos_dif(1,ii) = norm(dif_vec1,2)-safe_dist;
    pos_dif(2,ii) = norm(dif_vec2,2)-safe_dist;
    dif_vec3 = mpc_r_pos(:,ii)-est_state([1,3],1,ii);
    dif_vec4 = grd_r_pos(:,ii)-est_state([1,3],1,ii);
    pos_dif(3,ii) = norm(dif_vec3,2)-safe_dist;
    pos_dif(4,ii) = norm(dif_vec4,2)-safe_dist;
    dif_vec5 = mpc_r_plan_pos(:,:,ii)-mpc_pre_traj(:,2:end,ii);
%     dif_vec6 = grd_r_plan_pos(:,2:end,ii)-grd_pre_traj(:,2:end,ii);
    mpc_plan_pos_dif(:,ii) = sqrt((sum(dif_vec5.*dif_vec5,1))');
%     grd_plan_pos_dif(:,ii) = sqrt((sum(dif_vec6.*dif_vec6,1))');
end


ave_pos_dif = mean(pos_dif,2);
max_pos_dif = max(abs(pos_dif),[],2);
h2 = figure;
hold on
box on
plot((1:size(pos_dif,2))*0.5,pos_dif(2,:),'r--','LineWidth',2)
plot((1:size(pos_dif,2))*0.5,pos_dif(1,:),'b','LineWidth',2)
legend('reactive','mpc')
grid on
title('Distance difference')
xlabel('time [sec]')
ylabel('distance [m]')
xlim([0,160])
saveas(h2,'mpc_vs_single_dis_diff','fig')
fig2Pdf('mpc_vs_single_dis_diff',300,h2)

h3 = figure;
hold on
box on
plot((1:size(pos_dif,2))*0.5,pos_dif(4,:),'r--','LineWidth',2)
plot((1:size(pos_dif,2))*0.5,pos_dif(3,:),'b','LineWidth',2)
legend('reactive','mpc')
grid on
title('Distance difference between estimated human positions and robot positions')
xlabel('time [sec]')
ylabel('distance [m]')
xlim([0,160])
saveas(h3,'mpc_vs_single_dis_diff','fig')

v_dif(1,:) = mpc_r_v(1:end-1)-h_v;
v_dif(2,:) = grd_r_v(1:end-1)-h_v;
ave_v_dif = mean(v_dif,2);
max_v_dif = max(abs(v_dif),[],2);
h4 = figure;
hold on
box on
plot((1:size(v_dif,2))*0.5,v_dif(2,:),'r--','LineWidth',2)
plot((1:size(v_dif,2))*0.5,v_dif(1,:),'b','LineWidth',2)
legend('reactive','mpc')
grid on
title('Velocity difference')
xlabel('time[sec]')
ylabel('speed [m/s]')
xlim([0,160])
saveas(h4,'mpc_vs_single_vel','fig')
fig2Pdf('mpc_vs_single_vel',300,h4)
 
% save('sim_res.mat','ave_pred_err','max_pred_err',...
%     'ave_pos_dif','max_pos_dif','ave_v_dif','max_v_dif');